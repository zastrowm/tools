[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "strands-agents-tools"
version = "0.1.2"
description = "A collection of specialized tools for Strands Agents"
readme = "README.md"
requires-python = ">=3.10"
license = {text = "Apache-2.0"}
authors = [
    {name = "AWS", email = "opensource@amazon.com"},
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "strands-agents>=0.1.0,<1.0.0",
    "rich>=14.0.0,<15.0.0",
    "sympy>=1.12.0,<2.0.0",
    "prompt_toolkit>=3.0.51,<4.0.0",
    "colorama>=0.4.6,<0.5.0",
    "aws_requests_auth>=0.4.3,<0.5.0",
    "PyJWT>=2.10.1,<3.0.0",
    "dill>=0.4.0,<0.5.0",
    "pillow>=11.2.1,<12.0.0",
    "tenacity>=9.1.2,<10.0.0",
    "watchdog>=6.0.0,<7.0.0",
    "slack_bolt>=1.23.0,<2.0.0",
    # Note: Always want the latest tzdata
    "tzdata ; platform_system == 'Windows'",
]

[tool.hatch.build.targets.wheel]
packages = ["src/strands_tools"]

[tool.hatch.metadata]
allow-direct-references = true

[project.urls]
Homepage = "https://github.com/strands-agents/tools"
"Bug Tracker" = "https://github.com/strands-agents/tools/issues"
Documentation = "https://strandsagents.com/"

[project.optional-dependencies]
dev = [
    "commitizen>=4.4.0,<5.0.0",
    "hatch>=1.0.0,<2.0.0",
    "mypy>=0.981,<1.0.0",
    "pre-commit>=3.2.0,<4.2.0",
    "pytest>=8.0.0,<9.0.0",
    "ruff>=0.4.4,<0.5.0",
    "responses>=0.6.1,<1.0.0",
    "mem0ai>=0.1.99,<1.0.0",
    "opensearch-py>=2.8.0,<3.0.0",
]
docs = [
    "sphinx>=5.0.0,<6.0.0",
    "sphinx-rtd-theme>=1.0.0,<2.0.0",
    "sphinx-autodoc-typehints>=1.12.0,<2.0.0",
]
mem0_memory = [
    # Need to be optional as a fix for https://github.com/strands-agents/docs/issues/19
    "mem0ai>=0.1.99,<1.0.0",
    "opensearch-py>=2.8.0,<3.0.0",
]

[tool.hatch.envs.hatch-static-analysis]
features = ["mem0_memory"]
dependencies = [
  "strands-agents>=0.1.0,<1.0.0",
  "mypy>=0.981,<1.0.0",
  "ruff>=0.4.4,<0.5.0",
]

[tool.hatch.envs.hatch-static-analysis.scripts]
format-check = [
    "ruff format --check"
]
format-fix = [
    "ruff format"
]
lint-check = [
    "ruff check",
    # A lot of mypy errors right now - need to take a look but
    # don't want to block contributions based on these failures
    # "mypy -p src"
]
lint-fix = [
    "ruff check --fix"
]

[tool.hatch.envs.hatch-test]
features = ["mem0_memory"]
extra-dependencies = [
    "moto>=5.1.0,<6.0.0",
    "pytest>=8.0.0,<9.0.0",
    "pytest-cov>=4.1.0,<5.0.0",
    "pytest-xdist>=3.0.0,<4.0.0",
    "responses>=0.6.1,<1.0.0"
]
extra-args = [
    "-n",
    "auto",
    '-vv'
]

[[tool.hatch.envs.hatch-test.matrix]]
python = ["3.13", "3.12", "3.11", "3.10"]


[tool.hatch.envs.hatch-test.scripts]
run = [
    "pytest{env:HATCH_TEST_ARGS:} {args}"
]
run-cov = [
    "pytest{env:HATCH_TEST_ARGS:} --cov --cov-config=pyproject.toml {args}"
]
cov-combine = []
cov-report = []


[tool.hatch.envs.default.scripts]
list = [
    "echo 'Scripts commands available for default env:'; hatch env show --json | jq --raw-output '.default.scripts | keys[]'"
]
format = [
  "hatch fmt --formatter",
]
test-format = [
    "hatch fmt --formatter --check",
]
lint = [
    "hatch fmt --linter"
]
test-lint = [
    "hatch fmt --linter --check"
]
test = [
    "hatch test --cover --cov-report html --cov-report xml {args}"
]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
follow_untyped_imports = true
ignore_missing_imports = false

[tool.ruff]
line-length = 120
include = ["src/**/*.py", "tests/**/*.py"]

[tool.ruff.lint]
select = [
  "E", # pycodestyle
  "F", # pyflakes
  "I", # isort
  "B", # flake8-bugbear
]

[tool.coverage.run]
branch = true
source = ["src"]

[tool.coverage.report]
show_missing = true

[tool.coverage.html]
directory = "build/coverage/html"

[tool.coverage.xml]
output = "build/coverage/coverage.xml"

[tool.commitizen]
name = "cz_conventional_commits"
tag_format = "v$version"
bump_message = "chore(release): bump version $current_version -> $new_version"
version_files = [
    "pyproject.toml:version",
]
update_changelog_on_bump = true
